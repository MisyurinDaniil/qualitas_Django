---

- name: Deploy Django project to remote server
  hosts: all
  vars:
      host: "{{ inventory_hostname }}"
      ansible_user: "ak"
  
  tasks:
    # Обновляем кеш репозитория
    - name: Update apt-get repo and cache
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

    # Устанавливаем непобходимые пакеты для компиляции Python
    - name: Install required packages to compile Python source code
      become: yes
      apt:
        pkg:
          - wget
          - build-essential
          - libncursesw5-dev
          - libssl-dev
          - libsqlite3-dev
          - tk-dev
          - libgdbm-dev
          - libc6-dev
          - libbz2-dev
          - libffi-dev
          - zlib1g-dev
        state: latest

    # Скачиваем Python нужной версии
    - name: Download Python-3.10.13.tgz
      get_url:
        url: https://www.python.org/ftp/python/3.10.13/Python-3.10.13.tgz
        dest: /home/{{ ansible_ssh_user }}/Python-3.10.13.tgz
        mode: '0770'

    # Извлекаем из архива Python
    - name: Extract python-3.10.13.tgz
      unarchive:
        src: /home/{{ ansible_ssh_user }}/Python-3.10.13.tgz
        dest: /home/{{ ansible_ssh_user }}/
        remote_src: yes

    # Конфигурируем Python
    # - name: Compiling Python source code
    #   shell: cd /home/{{ ansible_ssh_user }}/Python-3.10.13/; ./configure --enable-optimizations
    
    - name: Configure Python build"
      command: ./configure
      args:
        chdir: /home/{{ ansible_ssh_user }}/Python-3.10.13
        creates: /home/{{ ansible_ssh_user }}/Python-3.10.13/Makefile"
      tags: test

    # Устанавливаем Python
    - name: Run install Python
      become: yes
      make:
        chdir: "/home/{{ ansible_ssh_user }}/Python-3.10.13"
        target: altinstall
      tags: test